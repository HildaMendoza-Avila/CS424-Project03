install.packages("rgeos")
install.packages("ggmap")
install.packages("mapdata")
install.packages("maptools")
install.packages("ggthemes")
library(ggplot2)
library(rgeos)
library(ggmap)
library(maps)
library(mapdata)
library(maptools)
library(ggthemes)
library(sp)
library(stringr)
library(plyr)
library(lubridate)
source('C:/Users/hilda/OneDrive/Desktop/CS 424/Week 12 Homework/CS 424 Week 12.R')
View(covidIL)
ggplot() + geom_polygon(data = ilCountyCovid, aes(x = long, y = lat, group = group, fill = cases), color = "black") + coord_fixed(1.2) +
geom_text(data = centroids2, aes(x = clong, y = clat, label = county), color = "black", size = 2.25) + scale_fill_distiller(palette = "Blues") +
labs(fill = "cases") + theme_map()
gsub("Mc Henry", "Mchenry", covidIL$county)
covidIL$county <- gsub("Mc Henry", "Mchenry", covidIL$county)
subset(covidIL, county == "Mchenry")
subset(covidIL, county == "Mc Henry")
subset(covidIL, county == "Mc Henry")
View(covidIL)
subset(covidIL, county == "McHenry")
covidIL$county <- gsub("McHenry", "Mchenry", covidIL$county)
subset(covidIL, county == "Mchenry")
#then take a look at the data for a given day on a map of Illinois counties. Note that today() can be a useful function to get today's date. Similarly today()-1 is yesterday. Note that the data in the file may be a day or two behind.
covidILOneDay <- subset(covidIL, newDate == "2021-03-15")
ilCountyCovid <- join(il, covidILOneDay)
ggplot() + geom_polygon(data = ilCountyCovid, aes(x = long, y = lat, group = group, fill = cases), color = "black") + coord_fixed(1.2) +
geom_text(data = centroids2, aes(x = clong, y = clat, label = county), color = "black", size = 2.25) + scale_fill_distiller(palette = "Blues") +
labs(fill = "cases") + theme_map()
covidIL$county <- gsub("DuPage", "Du Page", covidIL$county)
subset(covidIL, county == "Du Page")
covidIL$county <- gsub("McHenry", "Mchenry", covidIL$county)
subset(covidIL, county == "Mchenry")
covidIL$county <- gsub("DeKalb", "De Kalb", covidIL$county)
subset(covidIL, county == "De Kalb")
covidIL$county <- gsub("LaSalle", "La Salle", covidIL$county)
subset(covidIL, county == "La Salle")
covidIL$county <- gsub("McLean", "Mclean", covidIL$county)
subset(covidIL, county == "Mclean")
covidIL$county <- gsub("DuPage", "Du Page", covidIL$county)
subset(covidIL, county == "Du Page")
covidIL$county <- gsub("McDonough", "Mcdonough", covidIL$county)
subset(covidIL, county == "Mcdonough")
covidIL$county <- gsub("St. Clair", "St Clair", covidIL$county)
subset(covidIL, county == "St Clair")
#then take a look at the data for a given day on a map of Illinois counties. Note that today() can be a useful function to get today's date. Similarly today()-1 is yesterday. Note that the data in the file may be a day or two behind.
covidILOneDay <- subset(covidIL, newDate == "2021-03-15")
ilCountyCovid <- join(il, covidILOneDay)
ggplot() + geom_polygon(data = ilCountyCovid, aes(x = long, y = lat, group = group, fill = cases), color = "black") + coord_fixed(1.2) +
geom_text(data = centroids2, aes(x = clong, y = clat, label = county), color = "black", size = 2.25) + scale_fill_distiller(palette = "Blues") +
labs(fill = "cases") + theme_map()
source('C:/Users/hilda/OneDrive/Desktop/CS 424/CS424-Project03/dirSetup.R')
source('C:/Users/hilda/OneDrive/Desktop/CS 424/CS424-Project03/DataExperimentationScript.R')
rlang::last_error()
source('C:/Users/hilda/OneDrive/Desktop/CS 424/CS424-Project03/DataExperimentationScript.R')
for(curr_census_block in all_blocks){
# curr_block_subset <- subset(energyData, CENSUS_BLOCK == curr_census_block)
# instead of above subset
curr_block_inds <- which(all_blocks %in% c(curr_census_block))
# print("for-loop")
if(length(curr_block_inds) > 1){   # Add a new row to energyData
# Create a Data Frame with the values of the new entry - Step 1
multiples_entry <- getNewEntryDataFrame()
# Name the columns of the Data Frame (same as the columns in energyData) - Step 2
names(multiples_entry) <- c("COMMUNITY_AREA_NAME","CENSUS_BLOCK","BUILDING_TYPE","BUILDING_SUBTYPE","KWH_JANUARY_2010","KWH_FEBRUARY_2010","KWH_MARCH_2010","KWH_APRIL_2010","KWH_MAY_2010","KWH_JUNE_2010","KWH_JULY_2010","KWH_AUGUST_2010","KWH_SEPTEMBER_2010","KWH_OCTOBER_2010","KWH_NOVEMBER_2010","KWH_DECEMBER_2010","TOTAL_KWH","ELECTRICITY_ACCOUNTS","ZERO_KWH_ACCOUNTS","THERM_JANUARY_2010","THERM_FEBRUARY_2010","THERM_MARCH_2010","TERM_APRIL_2010", "THERM_MAY_2010","THERM_JUNE_2010","THERM_JULY_2010","THERM_AUGUST_2010","THERM_SEPTEMBER_2010","THERM_OCTOBER_2010","THERM_NOVEMBER_2010","THERM_DECEMBER_2010","TOTAL_THERMS","GAS_ACCOUNTS","KWH_TOTAL_SQFT","THERMS_TOTAL_SQFT","KWH_MEAN_2010","KWH_MINIMUM_2010","KWH_MAXIMUM_2010","KWH_SQFT_MEAN_2010","KWH_SQFT_MINIMUM_2010","KWH_SQFT_MAXIMUM_2010","THERM_MEAN_2010","THERM_MINIMUM_2010","THERM_MAXIMUM_2010","THERMS_SQFT_MEAN_2010","THERMS_SQFT_MINIMUM_2010","THERMS_SQFT_MAXIMUM_2010","TOTAL_POPULATION","TOTAL_UNITS","AVERAGE_STORIES","AVERAGE_BUILDING_AGE","AVERAGE_HOUSESIZE","OCCUPIED_UNITS","OCCUPIED_UNITS_PERCENTAGE","RENTER_OCCUPIED_HOUSING_UNITS","RENTER_OCCUPIED_HOUSING_PERCENTAGE","OCCUPIED_HOUSING_UNITS")
print("Length of multiples_entry:", length(multiples_entry), " Length of names(multiples_entry):", length(names(multiples_entry)))
# Using rbind() function to insert new row with "Multiple" information
energyData <- rbind(energyData, multiples_entry)
}
}
for(curr_census_block in all_blocks){
# curr_block_subset <- subset(energyData, CENSUS_BLOCK == curr_census_block)
# instead of above subset
curr_block_inds <- which(all_blocks %in% c(curr_census_block))
# print("for-loop")
if(length(curr_block_inds) > 1){   # Add a new row to energyData
# Create a Data Frame with the values of the new entry - Step 1
multiples_entry <- getNewEntryDataFrame()
# Name the columns of the Data Frame (same as the columns in energyData) - Step 2
names(multiples_entry) <- c("COMMUNITY_AREA_NAME","CENSUS_BLOCK","BUILDING_TYPE","BUILDING_SUBTYPE","KWH_JANUARY_2010","KWH_FEBRUARY_2010","KWH_MARCH_2010","KWH_APRIL_2010","KWH_MAY_2010","KWH_JUNE_2010","KWH_JULY_2010","KWH_AUGUST_2010","KWH_SEPTEMBER_2010","KWH_OCTOBER_2010","KWH_NOVEMBER_2010","KWH_DECEMBER_2010","TOTAL_KWH","ELECTRICITY_ACCOUNTS","ZERO_KWH_ACCOUNTS","THERM_JANUARY_2010","THERM_FEBRUARY_2010","THERM_MARCH_2010","TERM_APRIL_2010", "THERM_MAY_2010","THERM_JUNE_2010","THERM_JULY_2010","THERM_AUGUST_2010","THERM_SEPTEMBER_2010","THERM_OCTOBER_2010","THERM_NOVEMBER_2010","THERM_DECEMBER_2010","TOTAL_THERMS","GAS_ACCOUNTS","KWH_TOTAL_SQFT","THERMS_TOTAL_SQFT","KWH_MEAN_2010","KWH_MINIMUM_2010","KWH_MAXIMUM_2010","KWH_SQFT_MEAN_2010","KWH_SQFT_MINIMUM_2010","KWH_SQFT_MAXIMUM_2010","THERM_MEAN_2010","THERM_MINIMUM_2010","THERM_MAXIMUM_2010","THERMS_SQFT_MEAN_2010","THERMS_SQFT_MINIMUM_2010","THERMS_SQFT_MAXIMUM_2010","TOTAL_POPULATION","TOTAL_UNITS","AVERAGE_STORIES","AVERAGE_BUILDING_AGE","AVERAGE_HOUSESIZE","OCCUPIED_UNITS","OCCUPIED_UNITS_PERCENTAGE","RENTER_OCCUPIED_HOUSING_UNITS","RENTER_OCCUPIED_HOUSING_PERCENTAGE","OCCUPIED_HOUSING_UNITS")
print("Length of multiples_entry:")
print(length(multiples_entry))
print("Length of names(multiples_entry):")
print(length(names(multiples_entry)))
# Using rbind() function to insert new row with "Multiple" information
energyData <- rbind(energyData, multiples_entry)
}
}
for(curr_census_block in all_blocks){
# curr_block_subset <- subset(energyData, CENSUS_BLOCK == curr_census_block)
# instead of above subset
curr_block_inds <- which(all_blocks %in% c(curr_census_block))
# print("for-loop")
if(length(curr_block_inds) > 1){   # Add a new row to energyData
# Create a Data Frame with the values of the new entry - Step 1
multiples_entry <- getNewEntryDataFrame()
# Name the columns of the Data Frame (same as the columns in energyData) - Step 2
names(multiples_entry) <- c("COMMUNITY_AREA_NAME","CENSUS_BLOCK","BUILDING_TYPE","BUILDING_SUBTYPE","KWH_JANUARY_2010","KWH_FEBRUARY_2010","KWH_MARCH_2010","KWH_APRIL_2010","KWH_MAY_2010","KWH_JUNE_2010","KWH_JULY_2010","KWH_AUGUST_2010","KWH_SEPTEMBER_2010","KWH_OCTOBER_2010","KWH_NOVEMBER_2010","KWH_DECEMBER_2010","TOTAL_KWH","ELECTRICITY_ACCOUNTS","ZERO_KWH_ACCOUNTS","THERM_JANUARY_2010","THERM_FEBRUARY_2010","THERM_MARCH_2010","TERM_APRIL_2010", "THERM_MAY_2010","THERM_JUNE_2010","THERM_JULY_2010","THERM_AUGUST_2010","THERM_SEPTEMBER_2010","THERM_OCTOBER_2010","THERM_NOVEMBER_2010","THERM_DECEMBER_2010","TOTAL_THERMS","GAS_ACCOUNTS","KWH_TOTAL_SQFT","THERMS_TOTAL_SQFT","KWH_MEAN_2010","KWH_MINIMUM_2010","KWH_MAXIMUM_2010","KWH_SQFT_MEAN_2010","KWH_SQFT_MINIMUM_2010","KWH_SQFT_MAXIMUM_2010","THERM_MEAN_2010","THERM_MINIMUM_2010","THERM_MAXIMUM_2010","THERMS_SQFT_MEAN_2010","THERMS_SQFT_MINIMUM_2010","THERMS_SQFT_MAXIMUM_2010","TOTAL_POPULATION","TOTAL_UNITS","AVERAGE_STORIES","AVERAGE_BUILDING_AGE","AVERAGE_HOUSESIZE","OCCUPIED_UNITS","OCCUPIED_UNITS_PERCENTAGE","RENTER_OCCUPIED_HOUSING_UNITS","RENTER_OCCUPIED_HOUSING_PERCENTAGE","OCCUPIED_HOUSING_UNITS")
print("Length of multiples_entry:")
print(length(multiples_entry))
print("Length of names(multiples_entry):")
print(length(names(multiples_entry)))
# Using rbind() function to insert new row with "Multiple" information
# energyData <- rbind(energyData, multiples_entry)
}
}
print(names(multiples_entry))
print(multiples_entry)
getNewEntryDataFrame <- function(){
# print("Just Entered Function")
fst <- energyData[curr_block_inds[1], ]         #curr_block_subset[1,]
c <- c(fst$COMMUNITY_AREA_NAME, fst$CENSUS_BLOCK, "Multiple")
n <- c(fst$CENSUS_BLOCK)
print(n)
# add the mean values for each column in the subset with multiple entries for the same census block
for(colNum in 5:57){
# print(colNum)
if(colNum != 18 && colNum != 33){
sum <- 0
for(rowNum in curr_block_inds){
sum <- sum + energyData[[rowNum, colNum]]
}
n <- append(n, (sum/(length(curr_block_inds))))
# a <- curr_block_subset[colNum]
# vals <- a[[1,1]]
#
# if(nrow(a) == 2){
#   vals <- append(vals, a[[2,1]])
# }
# if(nrow(a) > 2){
#   for(x in 2:nrow(a)){
#     vals <- append(vals, a[[x,1]])
#   }
# }
# n <- append(n, mean(vals))
}
}
newRow <- data.frame(c[1], n[1], c[2], c[2], n[2], n[3], n[4], n[5], n[6], n[7], n[8], n[9], n[10], n[11], n[12], n[13], n[14], c[2],n[15],n[16],n[17],n[18],n[19],n[20],n[21],n[22],n[23],n[24],n[25],n[26],n[27],n[28], c[2], n[29], n[30], n[31], n[32], n[33], n[34], n[35], n[36], n[37], n[38], n[39], n[40], n[41], n[42], n[43], n[44], n[45], n[46], n[47], n[48], n[49], n[50], n[51], n[52], n[53], n[54], n[55], n[56], n[57])
print("Length")
print(length((newRow)))
print(newRow)
}
all_blocks <- energyData[[1,2]]   #energyData[2][[1,1]]
for(x in 2:nrow(energyData)){
all_blocks <- append(all_blocks, energyData[[x,2]])   #energyData[2][[x,1]])
}
for(curr_census_block in all_blocks){
# curr_block_subset <- subset(energyData, CENSUS_BLOCK == curr_census_block)
# instead of above subset
curr_block_inds <- which(all_blocks %in% c(curr_census_block))
# print("for-loop")
if(length(curr_block_inds) > 1){   # Add a new row to energyData
# Create a Data Frame with the values of the new entry - Step 1
multiples_entry <- getNewEntryDataFrame()
# Name the columns of the Data Frame (same as the columns in energyData) - Step 2
names(multiples_entry) <- c("COMMUNITY_AREA_NAME","CENSUS_BLOCK","BUILDING_TYPE","BUILDING_SUBTYPE","KWH_JANUARY_2010","KWH_FEBRUARY_2010","KWH_MARCH_2010","KWH_APRIL_2010","KWH_MAY_2010","KWH_JUNE_2010","KWH_JULY_2010","KWH_AUGUST_2010","KWH_SEPTEMBER_2010","KWH_OCTOBER_2010","KWH_NOVEMBER_2010","KWH_DECEMBER_2010","TOTAL_KWH","ELECTRICITY_ACCOUNTS","ZERO_KWH_ACCOUNTS","THERM_JANUARY_2010","THERM_FEBRUARY_2010","THERM_MARCH_2010","TERM_APRIL_2010", "THERM_MAY_2010","THERM_JUNE_2010","THERM_JULY_2010","THERM_AUGUST_2010","THERM_SEPTEMBER_2010","THERM_OCTOBER_2010","THERM_NOVEMBER_2010","THERM_DECEMBER_2010","TOTAL_THERMS","GAS_ACCOUNTS","KWH_TOTAL_SQFT","THERMS_TOTAL_SQFT","KWH_MEAN_2010","KWH_MINIMUM_2010","KWH_MAXIMUM_2010","KWH_SQFT_MEAN_2010","KWH_SQFT_MINIMUM_2010","KWH_SQFT_MAXIMUM_2010","THERM_MEAN_2010","THERM_MINIMUM_2010","THERM_MAXIMUM_2010","THERMS_SQFT_MEAN_2010","THERMS_SQFT_MINIMUM_2010","THERMS_SQFT_MAXIMUM_2010","TOTAL_POPULATION","TOTAL_UNITS","AVERAGE_STORIES","AVERAGE_BUILDING_AGE","AVERAGE_HOUSESIZE","OCCUPIED_UNITS","OCCUPIED_UNITS_PERCENTAGE","RENTER_OCCUPIED_HOUSING_UNITS","RENTER_OCCUPIED_HOUSING_PERCENTAGE","OCCUPIED_HOUSING_UNITS")
# print(names(multiples_entry))
# print(multiples_entry)
# print("Length of multiples_entry:")
# print(length(multiples_entry))
# print("Length of names(multiples_entry):")
# print(length(names(multiples_entry)))
# Using rbind() function to insert new row with "Multiple" information
# energyData <- rbind(energyData, multiples_entry)
}
}
getNewEntryDataFrame <- function(){
# print("Just Entered Function")
fst <- energyData[curr_block_inds[1], ]         #curr_block_subset[1,]
c <- c(fst$COMMUNITY_AREA_NAME, "Multiple")
n <- c(fst$CENSUS_BLOCK)
print(n)
# add the mean values for each column in the subset with multiple entries for the same census block
for(colNum in 5:57){
# print(colNum)
if(colNum != 18 && colNum != 33){
sum <- 0
for(rowNum in curr_block_inds){
sum <- sum + energyData[[rowNum, colNum]]
}
n <- append(n, (sum/(length(curr_block_inds))))
# a <- curr_block_subset[colNum]
# vals <- a[[1,1]]
#
# if(nrow(a) == 2){
#   vals <- append(vals, a[[2,1]])
# }
# if(nrow(a) > 2){
#   for(x in 2:nrow(a)){
#     vals <- append(vals, a[[x,1]])
#   }
# }
# n <- append(n, mean(vals))
}
}
newRow <- data.frame(c[1], n[1], c[2], c[2], n[2], n[3], n[4], n[5], n[6], n[7], n[8], n[9], n[10], n[11], n[12], n[13], n[14], c[2],n[15],n[16],n[17],n[18],n[19],n[20],n[21],n[22],n[23],n[24],n[25],n[26],n[27],n[28], c[2], n[29], n[30], n[31], n[32], n[33], n[34], n[35], n[36], n[37], n[38], n[39], n[40], n[41], n[42], n[43], n[44], n[45], n[46], n[47], n[48], n[49], n[50], n[51], n[52], n[53], n[54], n[55], n[56], n[57])
print("Length")
print(length((newRow)))
print(newRow)
}
all_blocks <- energyData[[1,2]]   #energyData[2][[1,1]]
for(x in 2:nrow(energyData)){
all_blocks <- append(all_blocks, energyData[[x,2]])   #energyData[2][[x,1]])
}
for(curr_census_block in all_blocks){
# curr_block_subset <- subset(energyData, CENSUS_BLOCK == curr_census_block)
# instead of above subset
curr_block_inds <- which(all_blocks %in% c(curr_census_block))
# print("for-loop")
if(length(curr_block_inds) > 1){   # Add a new row to energyData
# Create a Data Frame with the values of the new entry - Step 1
multiples_entry <- getNewEntryDataFrame()
# Name the columns of the Data Frame (same as the columns in energyData) - Step 2
names(multiples_entry) <- c("COMMUNITY_AREA_NAME","CENSUS_BLOCK","BUILDING_TYPE","BUILDING_SUBTYPE","KWH_JANUARY_2010","KWH_FEBRUARY_2010","KWH_MARCH_2010","KWH_APRIL_2010","KWH_MAY_2010","KWH_JUNE_2010","KWH_JULY_2010","KWH_AUGUST_2010","KWH_SEPTEMBER_2010","KWH_OCTOBER_2010","KWH_NOVEMBER_2010","KWH_DECEMBER_2010","TOTAL_KWH","ELECTRICITY_ACCOUNTS","ZERO_KWH_ACCOUNTS","THERM_JANUARY_2010","THERM_FEBRUARY_2010","THERM_MARCH_2010","TERM_APRIL_2010", "THERM_MAY_2010","THERM_JUNE_2010","THERM_JULY_2010","THERM_AUGUST_2010","THERM_SEPTEMBER_2010","THERM_OCTOBER_2010","THERM_NOVEMBER_2010","THERM_DECEMBER_2010","TOTAL_THERMS","GAS_ACCOUNTS","KWH_TOTAL_SQFT","THERMS_TOTAL_SQFT","KWH_MEAN_2010","KWH_MINIMUM_2010","KWH_MAXIMUM_2010","KWH_SQFT_MEAN_2010","KWH_SQFT_MINIMUM_2010","KWH_SQFT_MAXIMUM_2010","THERM_MEAN_2010","THERM_MINIMUM_2010","THERM_MAXIMUM_2010","THERMS_SQFT_MEAN_2010","THERMS_SQFT_MINIMUM_2010","THERMS_SQFT_MAXIMUM_2010","TOTAL_POPULATION","TOTAL_UNITS","AVERAGE_STORIES","AVERAGE_BUILDING_AGE","AVERAGE_HOUSESIZE","OCCUPIED_UNITS","OCCUPIED_UNITS_PERCENTAGE","RENTER_OCCUPIED_HOUSING_UNITS","RENTER_OCCUPIED_HOUSING_PERCENTAGE","OCCUPIED_HOUSING_UNITS")
# print(names(multiples_entry))
# print(multiples_entry)
# print("Length of multiples_entry:")
# print(length(multiples_entry))
# print("Length of names(multiples_entry):")
# print(length(names(multiples_entry)))
# Using rbind() function to insert new row with "Multiple" information
# energyData <- rbind(energyData, multiples_entry)
}
}
getNewEntryDataFrame <- function(){
# print("Just Entered Function")
fst <- energyData[curr_block_inds[1], ]         #curr_block_subset[1,]
c <- c(fst$COMMUNITY_AREA_NAME, "Multiple")
n <- c(fst$CENSUS_BLOCK)
print(n)
# add the mean values for each column in the subset with multiple entries for the same census block
for(colNum in 5:57){
# print(colNum)
if(colNum != 18 && colNum != 33){
sum <- 0
for(rowNum in curr_block_inds){
sum <- sum + energyData[[rowNum, colNum]]
}
n <- append(n, (sum/(length(curr_block_inds))))
# a <- curr_block_subset[colNum]
# vals <- a[[1,1]]
#
# if(nrow(a) == 2){
#   vals <- append(vals, a[[2,1]])
# }
# if(nrow(a) > 2){
#   for(x in 2:nrow(a)){
#     vals <- append(vals, a[[x,1]])
#   }
# }
# n <- append(n, mean(vals))
}
}
print(length(n))
newRow <- data.frame(c[1], n[1], c[2], c[2], n[2], n[3], n[4], n[5], n[6], n[7], n[8], n[9], n[10], n[11], n[12], n[13], n[14], c[2],n[15],n[16],n[17],n[18],n[19],n[20],n[21],n[22],n[23],n[24],n[25],n[26],n[27],n[28], c[2], n[29], n[30], n[31], n[32], n[33], n[34], n[35], n[36], n[37], n[38], n[39], n[40], n[41], n[42], n[43], n[44], n[45], n[46], n[47], n[48], n[49], n[50], n[51], n[52], n[53], n[54], n[55], n[56], n[57])
print("Length")
print(length((newRow)))
print(newRow)
}
all_blocks <- energyData[[1,2]]   #energyData[2][[1,1]]
for(x in 2:nrow(energyData)){
all_blocks <- append(all_blocks, energyData[[x,2]])   #energyData[2][[x,1]])
}
for(curr_census_block in all_blocks){
# curr_block_subset <- subset(energyData, CENSUS_BLOCK == curr_census_block)
# instead of above subset
curr_block_inds <- which(all_blocks %in% c(curr_census_block))
# print("for-loop")
if(length(curr_block_inds) > 1){   # Add a new row to energyData
# Create a Data Frame with the values of the new entry - Step 1
multiples_entry <- getNewEntryDataFrame()
# Name the columns of the Data Frame (same as the columns in energyData) - Step 2
names(multiples_entry) <- c("COMMUNITY_AREA_NAME","CENSUS_BLOCK","BUILDING_TYPE","BUILDING_SUBTYPE","KWH_JANUARY_2010","KWH_FEBRUARY_2010","KWH_MARCH_2010","KWH_APRIL_2010","KWH_MAY_2010","KWH_JUNE_2010","KWH_JULY_2010","KWH_AUGUST_2010","KWH_SEPTEMBER_2010","KWH_OCTOBER_2010","KWH_NOVEMBER_2010","KWH_DECEMBER_2010","TOTAL_KWH","ELECTRICITY_ACCOUNTS","ZERO_KWH_ACCOUNTS","THERM_JANUARY_2010","THERM_FEBRUARY_2010","THERM_MARCH_2010","TERM_APRIL_2010", "THERM_MAY_2010","THERM_JUNE_2010","THERM_JULY_2010","THERM_AUGUST_2010","THERM_SEPTEMBER_2010","THERM_OCTOBER_2010","THERM_NOVEMBER_2010","THERM_DECEMBER_2010","TOTAL_THERMS","GAS_ACCOUNTS","KWH_TOTAL_SQFT","THERMS_TOTAL_SQFT","KWH_MEAN_2010","KWH_MINIMUM_2010","KWH_MAXIMUM_2010","KWH_SQFT_MEAN_2010","KWH_SQFT_MINIMUM_2010","KWH_SQFT_MAXIMUM_2010","THERM_MEAN_2010","THERM_MINIMUM_2010","THERM_MAXIMUM_2010","THERMS_SQFT_MEAN_2010","THERMS_SQFT_MINIMUM_2010","THERMS_SQFT_MAXIMUM_2010","TOTAL_POPULATION","TOTAL_UNITS","AVERAGE_STORIES","AVERAGE_BUILDING_AGE","AVERAGE_HOUSESIZE","OCCUPIED_UNITS","OCCUPIED_UNITS_PERCENTAGE","RENTER_OCCUPIED_HOUSING_UNITS","RENTER_OCCUPIED_HOUSING_PERCENTAGE","OCCUPIED_HOUSING_UNITS")
# print(names(multiples_entry))
# print(multiples_entry)
# print("Length of multiples_entry:")
# print(length(multiples_entry))
# print("Length of names(multiples_entry):")
# print(length(names(multiples_entry)))
# Using rbind() function to insert new row with "Multiple" information
# energyData <- rbind(energyData, multiples_entry)
}
}
getNewEntryDataFrame <- function(){
# print("Just Entered Function")
fst <- energyData[curr_block_inds[1], ]         #curr_block_subset[1,]
c <- c(fst$COMMUNITY_AREA_NAME, "Multiple")
n <- c(fst$CENSUS_BLOCK)
print(n)
# add the mean values for each column in the subset with multiple entries for the same census block
for(colNum in 5:57){
# print(colNum)
if(colNum != 18 && colNum != 33){
sum <- 0
for(rowNum in curr_block_inds){
sum <- sum + energyData[[rowNum, colNum]]
}
n <- append(n, (sum/(length(curr_block_inds))))
# a <- curr_block_subset[colNum]
# vals <- a[[1,1]]
#
# if(nrow(a) == 2){
#   vals <- append(vals, a[[2,1]])
# }
# if(nrow(a) > 2){
#   for(x in 2:nrow(a)){
#     vals <- append(vals, a[[x,1]])
#   }
# }
# n <- append(n, mean(vals))
}
}
print(length(n))
newRow <- data.frame(c[1], n[1], c[2], c[2], n[2], n[3], n[4], n[5], n[6], n[7], n[8], n[9], n[10], n[11], n[12], n[13], n[14], c[2],n[15],n[16],n[17],n[18],n[19],n[20],n[21],n[22],n[23],n[24],n[25],n[26],n[27],n[28], c[2], n[29], n[30], n[31], n[32], n[33], n[34], n[35], n[36], n[37], n[38], n[39], n[40], n[41], n[42], n[43], n[44], n[45], n[46], n[47], n[48], n[49], n[50], n[51], n[52])
print("Length")
print(length((newRow)))
print(newRow)
}
all_blocks <- energyData[[1,2]]   #energyData[2][[1,1]]
for(x in 2:nrow(energyData)){
all_blocks <- append(all_blocks, energyData[[x,2]])   #energyData[2][[x,1]])
}
for(curr_census_block in all_blocks){
# curr_block_subset <- subset(energyData, CENSUS_BLOCK == curr_census_block)
# instead of above subset
curr_block_inds <- which(all_blocks %in% c(curr_census_block))
# print("for-loop")
if(length(curr_block_inds) > 1){   # Add a new row to energyData
# Create a Data Frame with the values of the new entry - Step 1
multiples_entry <- getNewEntryDataFrame()
# Name the columns of the Data Frame (same as the columns in energyData) - Step 2
names(multiples_entry) <- c("COMMUNITY_AREA_NAME","CENSUS_BLOCK","BUILDING_TYPE","BUILDING_SUBTYPE","KWH_JANUARY_2010","KWH_FEBRUARY_2010","KWH_MARCH_2010","KWH_APRIL_2010","KWH_MAY_2010","KWH_JUNE_2010","KWH_JULY_2010","KWH_AUGUST_2010","KWH_SEPTEMBER_2010","KWH_OCTOBER_2010","KWH_NOVEMBER_2010","KWH_DECEMBER_2010","TOTAL_KWH","ELECTRICITY_ACCOUNTS","ZERO_KWH_ACCOUNTS","THERM_JANUARY_2010","THERM_FEBRUARY_2010","THERM_MARCH_2010","TERM_APRIL_2010", "THERM_MAY_2010","THERM_JUNE_2010","THERM_JULY_2010","THERM_AUGUST_2010","THERM_SEPTEMBER_2010","THERM_OCTOBER_2010","THERM_NOVEMBER_2010","THERM_DECEMBER_2010","TOTAL_THERMS","GAS_ACCOUNTS","KWH_TOTAL_SQFT","THERMS_TOTAL_SQFT","KWH_MEAN_2010","KWH_MINIMUM_2010","KWH_MAXIMUM_2010","KWH_SQFT_MEAN_2010","KWH_SQFT_MINIMUM_2010","KWH_SQFT_MAXIMUM_2010","THERM_MEAN_2010","THERM_MINIMUM_2010","THERM_MAXIMUM_2010","THERMS_SQFT_MEAN_2010","THERMS_SQFT_MINIMUM_2010","THERMS_SQFT_MAXIMUM_2010","TOTAL_POPULATION","TOTAL_UNITS","AVERAGE_STORIES","AVERAGE_BUILDING_AGE","AVERAGE_HOUSESIZE","OCCUPIED_UNITS","OCCUPIED_UNITS_PERCENTAGE","RENTER_OCCUPIED_HOUSING_UNITS","RENTER_OCCUPIED_HOUSING_PERCENTAGE","OCCUPIED_HOUSING_UNITS")
# print(names(multiples_entry))
# print(multiples_entry)
# print("Length of multiples_entry:")
# print(length(multiples_entry))
# print("Length of names(multiples_entry):")
# print(length(names(multiples_entry)))
# Using rbind() function to insert new row with "Multiple" information
# energyData <- rbind(energyData, multiples_entry)
}
}
# Create a 'Multiple' entry and correctly integrate the multiple values
getNewEntryDataFrame <- function(){
fst <- energyData[curr_block_inds[1], ]
c <- c(fst$COMMUNITY_AREA_NAME, "Multiple")
n <- c(fst$CENSUS_BLOCK)
print(n)
# add the mean values for each column in the subset with multiple entries for the same census block
for(colNum in 5:57){
if(colNum != 18 && colNum != 33){
sum <- 0
for(rowNum in curr_block_inds){
sum <- sum + energyData[[rowNum, colNum]]
}
n <- append(n, (sum/(length(curr_block_inds))))
}
}
data.frame(c[1], n[1], c[2], c[2], n[2], n[3], n[4], n[5], n[6], n[7], n[8], n[9], n[10], n[11], n[12], n[13], n[14], c[2],n[15],n[16],n[17],n[18],n[19],n[20],n[21],n[22],n[23],n[24],n[25],n[26],n[27],n[28], c[2], n[29], n[30], n[31], n[32], n[33], n[34], n[35], n[36], n[37], n[38], n[39], n[40], n[41], n[42], n[43], n[44], n[45], n[46], n[47], n[48], n[49], n[50], n[51], n[52])
}
all_blocks <- energyData[[1,2]]
for(x in 2:nrow(energyData)){
all_blocks <- append(all_blocks, energyData[[x,2]])
}
for(curr_census_block in all_blocks){
curr_block_inds <- which(all_blocks %in% c(curr_census_block))
if(length(curr_block_inds) > 1){   # Add a new row to energyData
# Create a Data Frame with the values of the new entry - Step 1
multiples_entry <- getNewEntryDataFrame()
# Name the columns of the Data Frame (same as the columns in energyData) - Step 2
names(multiples_entry) <- c("COMMUNITY_AREA_NAME","CENSUS_BLOCK","BUILDING_TYPE","BUILDING_SUBTYPE","KWH_JANUARY_2010","KWH_FEBRUARY_2010","KWH_MARCH_2010","KWH_APRIL_2010","KWH_MAY_2010","KWH_JUNE_2010","KWH_JULY_2010","KWH_AUGUST_2010","KWH_SEPTEMBER_2010","KWH_OCTOBER_2010","KWH_NOVEMBER_2010","KWH_DECEMBER_2010","TOTAL_KWH","ELECTRICITY_ACCOUNTS","ZERO_KWH_ACCOUNTS","THERM_JANUARY_2010","THERM_FEBRUARY_2010","THERM_MARCH_2010","TERM_APRIL_2010", "THERM_MAY_2010","THERM_JUNE_2010","THERM_JULY_2010","THERM_AUGUST_2010","THERM_SEPTEMBER_2010","THERM_OCTOBER_2010","THERM_NOVEMBER_2010","THERM_DECEMBER_2010","TOTAL_THERMS","GAS_ACCOUNTS","KWH_TOTAL_SQFT","THERMS_TOTAL_SQFT","KWH_MEAN_2010","KWH_MINIMUM_2010","KWH_MAXIMUM_2010","KWH_SQFT_MEAN_2010","KWH_SQFT_MINIMUM_2010","KWH_SQFT_MAXIMUM_2010","THERM_MEAN_2010","THERM_MINIMUM_2010","THERM_MAXIMUM_2010","THERMS_SQFT_MEAN_2010","THERMS_SQFT_MINIMUM_2010","THERMS_SQFT_MAXIMUM_2010","TOTAL_POPULATION","TOTAL_UNITS","AVERAGE_STORIES","AVERAGE_BUILDING_AGE","AVERAGE_HOUSESIZE","OCCUPIED_UNITS","OCCUPIED_UNITS_PERCENTAGE","RENTER_OCCUPIED_HOUSING_UNITS","RENTER_OCCUPIED_HOUSING_PERCENTAGE","OCCUPIED_HOUSING_UNITS")
# Using rbind() function to insert new row with "Multiple" information
energyData <- rbind(energyData, multiples_entry)
}
}
# Create a 'Multiple' entry and correctly integrate the multiple values
getNewEntryDataFrame <- function(){
fst <- energyData[curr_block_inds[1], ]
c <- c(fst$COMMUNITY_AREA_NAME, "Multiple")
n <- c(fst$CENSUS_BLOCK)
print(n)
# add the mean values for each column in the subset with multiple entries for the same census block
for(colNum in 5:57){
if(colNum != 18 && colNum != 33){
sum <- 0
for(rowNum in curr_block_inds){
sum <- sum + energyData[[rowNum, colNum]]
}
n <- append(n, (sum/(length(curr_block_inds))))
}
}
data.frame(c[1], n[1], c[2], c[2], n[2], n[3], n[4], n[5], n[6], n[7], n[8], n[9], n[10], n[11], n[12], n[13], n[14], c[2],n[15],n[16],n[17],n[18],n[19],n[20],n[21],n[22],n[23],n[24],n[25],n[26],n[27],n[28], c[2], n[29], n[30], n[31], n[32], n[33], n[34], n[35], n[36], n[37], n[38], n[39], n[40], n[41], n[42], n[43], n[44], n[45], n[46], n[47], n[48], n[49], n[50], n[51], n[52])
}
all_blocks <- energyData[[1,2]]
for(x in 2:nrow(energyData)){
if((x %in% all_blocks) == FALSE){
all_blocks <- append(all_blocks, energyData[[x,2]])
}
}
for(curr_census_block in all_blocks){
curr_block_inds <- which(all_blocks %in% c(curr_census_block))
if(length(curr_block_inds) > 1){   # Add a new row to energyData
# Create a Data Frame with the values of the new entry - Step 1
multiples_entry <- getNewEntryDataFrame()
# Name the columns of the Data Frame (same as the columns in energyData) - Step 2
names(multiples_entry) <- c("COMMUNITY_AREA_NAME","CENSUS_BLOCK","BUILDING_TYPE","BUILDING_SUBTYPE","KWH_JANUARY_2010","KWH_FEBRUARY_2010","KWH_MARCH_2010","KWH_APRIL_2010","KWH_MAY_2010","KWH_JUNE_2010","KWH_JULY_2010","KWH_AUGUST_2010","KWH_SEPTEMBER_2010","KWH_OCTOBER_2010","KWH_NOVEMBER_2010","KWH_DECEMBER_2010","TOTAL_KWH","ELECTRICITY_ACCOUNTS","ZERO_KWH_ACCOUNTS","THERM_JANUARY_2010","THERM_FEBRUARY_2010","THERM_MARCH_2010","TERM_APRIL_2010", "THERM_MAY_2010","THERM_JUNE_2010","THERM_JULY_2010","THERM_AUGUST_2010","THERM_SEPTEMBER_2010","THERM_OCTOBER_2010","THERM_NOVEMBER_2010","THERM_DECEMBER_2010","TOTAL_THERMS","GAS_ACCOUNTS","KWH_TOTAL_SQFT","THERMS_TOTAL_SQFT","KWH_MEAN_2010","KWH_MINIMUM_2010","KWH_MAXIMUM_2010","KWH_SQFT_MEAN_2010","KWH_SQFT_MINIMUM_2010","KWH_SQFT_MAXIMUM_2010","THERM_MEAN_2010","THERM_MINIMUM_2010","THERM_MAXIMUM_2010","THERMS_SQFT_MEAN_2010","THERMS_SQFT_MINIMUM_2010","THERMS_SQFT_MAXIMUM_2010","TOTAL_POPULATION","TOTAL_UNITS","AVERAGE_STORIES","AVERAGE_BUILDING_AGE","AVERAGE_HOUSESIZE","OCCUPIED_UNITS","OCCUPIED_UNITS_PERCENTAGE","RENTER_OCCUPIED_HOUSING_UNITS","RENTER_OCCUPIED_HOUSING_PERCENTAGE","OCCUPIED_HOUSING_UNITS")
# Using rbind() function to insert new row with "Multiple" information
energyData <- rbind(energyData, multiples_entry)
}
}
getNewEntryDataFrame <- function(){
fst <- energyData[curr_block_inds[1], ]
c <- c(fst$COMMUNITY_AREA_NAME, "Multiple")
n <- c(fst$CENSUS_BLOCK)
print(n)
# add the mean values for each column in the subset with multiple entries for the same census block
for(colNum in 5:57){
if(colNum != 18 && colNum != 33){
sum <- 0
for(rowNum in curr_block_inds){
sum <- sum + energyData[[rowNum, colNum]]
}
n <- append(n, (sum/(length(curr_block_inds))))
}
}
data.frame(c[1], n[1], c[2], c[2], n[2], n[3], n[4], n[5], n[6], n[7], n[8], n[9], n[10], n[11], n[12], n[13], n[14], c[2],n[15],n[16],n[17],n[18],n[19],n[20],n[21],n[22],n[23],n[24],n[25],n[26],n[27],n[28], c[2], n[29], n[30], n[31], n[32], n[33], n[34], n[35], n[36], n[37], n[38], n[39], n[40], n[41], n[42], n[43], n[44], n[45], n[46], n[47], n[48], n[49], n[50], n[51], n[52])
}
all_blocks <- energyData[[1,2]]
for(x in 2:nrow(energyData)){
curr_val <- energyData[[x,2]]
if((curr_val %in% all_blocks) == FALSE){
all_blocks <- append(all_blocks, curr_val)
}
}
for(curr_census_block in all_blocks){
curr_block_inds <- which(all_blocks %in% c(curr_census_block))
if(length(curr_block_inds) > 1){   # Add a new row to energyData
# Create a Data Frame with the values of the new entry - Step 1
multiples_entry <- getNewEntryDataFrame()
# Name the columns of the Data Frame (same as the columns in energyData) - Step 2
names(multiples_entry) <- c("COMMUNITY_AREA_NAME","CENSUS_BLOCK","BUILDING_TYPE","BUILDING_SUBTYPE","KWH_JANUARY_2010","KWH_FEBRUARY_2010","KWH_MARCH_2010","KWH_APRIL_2010","KWH_MAY_2010","KWH_JUNE_2010","KWH_JULY_2010","KWH_AUGUST_2010","KWH_SEPTEMBER_2010","KWH_OCTOBER_2010","KWH_NOVEMBER_2010","KWH_DECEMBER_2010","TOTAL_KWH","ELECTRICITY_ACCOUNTS","ZERO_KWH_ACCOUNTS","THERM_JANUARY_2010","THERM_FEBRUARY_2010","THERM_MARCH_2010","TERM_APRIL_2010", "THERM_MAY_2010","THERM_JUNE_2010","THERM_JULY_2010","THERM_AUGUST_2010","THERM_SEPTEMBER_2010","THERM_OCTOBER_2010","THERM_NOVEMBER_2010","THERM_DECEMBER_2010","TOTAL_THERMS","GAS_ACCOUNTS","KWH_TOTAL_SQFT","THERMS_TOTAL_SQFT","KWH_MEAN_2010","KWH_MINIMUM_2010","KWH_MAXIMUM_2010","KWH_SQFT_MEAN_2010","KWH_SQFT_MINIMUM_2010","KWH_SQFT_MAXIMUM_2010","THERM_MEAN_2010","THERM_MINIMUM_2010","THERM_MAXIMUM_2010","THERMS_SQFT_MEAN_2010","THERMS_SQFT_MINIMUM_2010","THERMS_SQFT_MAXIMUM_2010","TOTAL_POPULATION","TOTAL_UNITS","AVERAGE_STORIES","AVERAGE_BUILDING_AGE","AVERAGE_HOUSESIZE","OCCUPIED_UNITS","OCCUPIED_UNITS_PERCENTAGE","RENTER_OCCUPIED_HOUSING_UNITS","RENTER_OCCUPIED_HOUSING_PERCENTAGE","OCCUPIED_HOUSING_UNITS")
# Using rbind() function to insert new row with "Multiple" information
energyData <- rbind(energyData, multiples_entry)
}
}
View(multiples_entry)
View(energyData)
rm(all_blocks)
rm(curr_block_inds)
rm(curr_census_block)
rm(multiples_entry)
rm(curr_val)
rm(x)
colnames(energyData)
Cook_county <- blocks(state = "IL", county = "Cook", year = 2010)
names(Cook_county)[names(Cook_county) == "GEOID10"] <- "CENSUS_BLOCK"
initial_area <- subset(energyData, COMMUNITY_AREA_NAME == "Near West Side")
initial_map <- subset(Cook_county, CENSUS_BLOCK %in% initial_area$CENSUS_BLOCK)
mapview(initial_map, zcol = "TOTAL_KWH")
mapview(initial_map, zcol = TOTAL_KWH)
mapview(initial_map, zcol = TOTAL_KWH)
colnames(initial_map)
initial_map$TOTAL_KWH <- 0
colnames(initial_map)
View(initial_map)
View(Cook_county)
View(initial_area)
colnames(initial_area)
multiples_subset <- subset(initial_area, BUILDING_TYPE == "Multiple")
# initial_map$TOTAL_KWH <- 0
initial_map$TOTAL_KWH <- ifelse(initial_map$CENSUS_BLOCK %in% multiples_subset$CENSUS_BLOCK, multiples_subset$TOTAL_KWH, 0)
View(initial_map)
